package applettest;
/**
 * PolicyTest.java
 *
 * This program demonstrates how to use the use of Callable Statement interface
 * to display the details of each employee.
 *
 * Copyright (c) 2007 Aptech Software Limited. All Rights Reserved.
 */

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 * PolicyTest is an applet class to display the records of each employee.
 * @author vincent
 */
public class PolicyTest extends javax.swing.JApplet {
    
    /**
     * Initializes the applet PolicyTest
     */
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    try {
                        UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows." +
                                "WindowsLookAndFeel");
                        UIManager.put("Button.showMnemonics", Boolean.TRUE);
                    } catch (IllegalAccessException ex) {
                        ex.printStackTrace();
                    } catch (InstantiationException ex) {
                        ex.printStackTrace();
                    } catch (UnsupportedLookAndFeelException ex) {
                        ex.printStackTrace();
                    } catch (ClassNotFoundException ex) {
                        ex.printStackTrace();
                    }
                    
                    getContentPane().setBackground(new Color(212, 208, 200));
                    
                    try {
                        
                        // Load a Type 4 driver for connecting to SQL Server 2005 database.
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                        
                        // Obtain a connection to the database.
                        cn = DriverManager.getConnection(getConnectionUrl(), userName, password);
                        
                        // CallableStatement object calling the stored procedure Employee_Info.
                        csDetails = cn.prepareCall("{call Employee_Info}");
                        
                        // Execute the stored procedure and return the ResultSet object
                        // generated by the query.
                        rsDetails = csDetails.executeQuery();
                        
                    } catch (ClassNotFoundException ex) {
                        ex.printStackTrace();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                    
                    initComponents();
                }
                
                
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }
    
    /**
     * This method returns the URL for the SQL Server 2005 database.
     * @return The string contaning the URL, server name, instance name and database name.
     */
    private String getConnectionUrl(){
        return url + serverName + ";instanceName=" + instanceName +
                ";databaseName=" + databaseName;
    }
    
    /**
     * This method is invoked to close the connection.
     */
    private void closeConnection(){
        try {
            
            if(rsDetails != null) {
                rsDetails.close();
            }
            
            if(csDetails != null) {
                csDetails.close();
            }
            
            if(cn != null) {
                cn.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    pnlHeading = new javax.swing.JPanel();
    lblHeading = new javax.swing.JLabel();
    lblName = new javax.swing.JLabel();
    btnNext = new javax.swing.JButton();
    btnExit = new javax.swing.JButton();
    jPanel1 = new javax.swing.JPanel();
    txtName = new javax.swing.JTextField();
    lblDepartment = new javax.swing.JLabel();
    txtDepartment = new javax.swing.JTextField();
    lblDOJ = new javax.swing.JLabel();
    txtDOJ = new javax.swing.JTextField();
    lblSalary = new javax.swing.JLabel();
    txtSalary = new javax.swing.JTextField();
    lblAddress = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    txaAddress = new javax.swing.JTextArea();
    jLabel = new javax.swing.JLabel();

    getContentPane().setLayout(null);

    setName("panelApplet");
    pnlHeading.setLayout(null);

    pnlHeading.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    pnlHeading.setFont(new java.awt.Font("Tahoma", 0, 11));
    lblHeading.setFont(new java.awt.Font("Tahoma", 1, 14));
    lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblHeading.setText("Employee Details");
    pnlHeading.add(lblHeading);
    lblHeading.setBounds(40, 0, 230, 20);

    getContentPane().add(pnlHeading);
    pnlHeading.setBounds(30, 10, 320, 25);

    lblName.setFont(new java.awt.Font("Tahoma", 0, 11));
    lblName.setText("Name:");
    getContentPane().add(lblName);
    lblName.setBounds(50, 20, 31, 20);

    btnNext.setMnemonic('N');
    btnNext.setText("Next");
    btnNext.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnNextActionPerformed(evt);
      }
    });

    getContentPane().add(btnNext);
    btnNext.setBounds(130, 270, 57, 23);

    btnExit.setFont(new java.awt.Font("Tahoma", 0, 11));
    btnExit.setMnemonic('x');
    btnExit.setText("Exit");
    btnExit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnExitActionPerformed(evt);
      }
    });

    getContentPane().add(btnExit);
    btnExit.setBounds(220, 270, 53, 23);

    jPanel1.setLayout(null);

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel1.setFont(new java.awt.Font("Tahoma", 0, 11));
    jPanel1.setMinimumSize(new java.awt.Dimension(200, 34));
    jPanel1.setPreferredSize(new java.awt.Dimension(250, 150));
    txtName.setFont(new java.awt.Font("Tahoma", 0, 11));
    txtName.setPreferredSize(new java.awt.Dimension(150, 20));
    jPanel1.add(txtName);
    txtName.setBounds(100, 10, 190, 20);

    lblDepartment.setText("Department:");
    jPanel1.add(lblDepartment);
    lblDepartment.setBounds(20, 40, 58, 20);

    txtDepartment.setFont(new java.awt.Font("Tahoma", 0, 11));
    txtDepartment.setPreferredSize(new java.awt.Dimension(150, 20));
    jPanel1.add(txtDepartment);
    txtDepartment.setBounds(100, 40, 190, 20);

    lblDOJ.setFont(new java.awt.Font("Arial", 0, 11));
    lblDOJ.setText("Date of Joining:");
    jPanel1.add(lblDOJ);
    lblDOJ.setBounds(20, 70, 74, 20);

    txtDOJ.setFont(new java.awt.Font("Tahoma", 0, 11));
    txtDOJ.setPreferredSize(new java.awt.Dimension(150, 20));
    jPanel1.add(txtDOJ);
    txtDOJ.setBounds(100, 70, 190, 20);

    lblSalary.setText("Salary:");
    jPanel1.add(lblSalary);
    lblSalary.setBounds(20, 100, 32, 20);

    txtSalary.setFont(new java.awt.Font("Tahoma", 0, 11));
    txtSalary.setPreferredSize(new java.awt.Dimension(150, 20));
    jPanel1.add(txtSalary);
    txtSalary.setBounds(100, 100, 190, 20);

    lblAddress.setFont(new java.awt.Font("Arial", 0, 11));
    lblAddress.setText("Address:");
    lblAddress.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    lblAddress.setPreferredSize(new java.awt.Dimension(60, 14));
    jPanel1.add(lblAddress);
    lblAddress.setBounds(20, 130, 60, 20);

    txaAddress.setColumns(20);
    txaAddress.setFont(new java.awt.Font("Tahoma", 0, 11));
    txaAddress.setLineWrap(true);
    txaAddress.setRows(4);
    jScrollPane1.setViewportView(txaAddress);

    jPanel1.add(jScrollPane1);
    jScrollPane1.setBounds(100, 130, 190, 60);

    jLabel.setText("Name:");
    jPanel1.add(jLabel);
    jLabel.setBounds(20, 10, 34, 20);

    getContentPane().add(jPanel1);
    jPanel1.setBounds(30, 50, 320, 200);

  }// </editor-fold>//GEN-END:initComponents
  
  /**
   * This method is used to exit the application and to close all the JDBC
   * resources.
   * @param evt ActionEvent object to store information about the click on the
   * Exit button.
   */
  private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
      
      closeConnection();
      
      System.exit(0);
  }//GEN-LAST:event_btnExitActionPerformed
  
  /**
   *
   * This method is invoked to display the next record from the ResultSet.
   * @param evt ActionEvent object to store information about the click on the
   * Next button.
   */
  private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
      
      try {
          rsDetails.next();
          
          if(rsDetails.isAfterLast() || rsDetails.isBeforeFirst()){
              btnNext.setEnabled(false);
              JOptionPane.showMessageDialog(this, "You have reached the end " +
                      "of the result set.");
          } else {
              txtName.setText(rsDetails.getString(1));
              txtDepartment.setText(rsDetails.getString(2));
              txtDOJ.setText((rsDetails.getDate(3)).toString());
              txtSalary.setText(Integer.valueOf(rsDetails.getInt(4)).toString());
              txaAddress.setText(rsDetails.getString(5));
          }
      } catch (SQLException ex) {
          ex.printStackTrace();
      }
      
  }//GEN-LAST:event_btnNextActionPerformed
  
  /**
   * Instance variable to store a reference to a Connection object.
   */
  private Connection cn = null;
  
  /**
   * Instance variable to hold a reference to CallableStatement object.
   */
  private CallableStatement csDetails = null;
  
  /**
   * Instance variable to store a reference to a connected ResultSet.
   */
  private ResultSet rsDetails = null;
  
  /**
   * Instance variable to store the URL connection string.
   */
  private final String url = "jdbc:sqlserver://";
  
  /**
   * Instance variable to store the IP address of the machine on which SQL Server 2005
   * database is located.
   */
  private final String serverName= "10.2.1.51";
  
  /**
   * Instance variable to store the default port number of SQL Server Database.
   */
  private final String portNumber = "1433";
  
  /**
   * Instance variable to store the instance name of the SQL Server.
   */
  private final String instanceName= "martin";
  
  /**
   * Instance variable to store the name of the database to connect to.
   */
  private final String databaseName= "DeveloperApps";
  
  /**
   * Instance variable to store the user name to connect to SQL Server.
   */
  private final String userName = "sa";
  
  /**
   * Instance variable to store the password to connect to SQL Server.
   */
  private final String password = "playware";
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnExit;
  private javax.swing.JButton btnNext;
  private javax.swing.JLabel jLabel;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel lblAddress;
  private javax.swing.JLabel lblDOJ;
  private javax.swing.JLabel lblDepartment;
  private javax.swing.JLabel lblHeading;
  private javax.swing.JLabel lblName;
  private javax.swing.JLabel lblSalary;
  private javax.swing.JPanel pnlHeading;
  private javax.swing.JTextArea txaAddress;
  private javax.swing.JTextField txtDOJ;
  private javax.swing.JTextField txtDepartment;
  private javax.swing.JTextField txtName;
  private javax.swing.JTextField txtSalary;
  // End of variables declaration//GEN-END:variables
  
}
