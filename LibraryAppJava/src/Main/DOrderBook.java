/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import BackgroundColor.SetBackgroundbtn;
import Controller.DateInFormat;
import Controller.DateToDTime;
import Controller.Valid;
import Model.DataHelper;
import Model.MyDAO;
import Model.tblBondReader;
import Model.tblBondReaderDAO;
import Model.tblBondReaderModel;
import PrintOrderBook.PrintOrder;
import java.awt.Point;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Types;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author MacOS
 */
public class DOrderBook extends javax.swing.JDialog {

    static Point comPoint = null;

    MyDAO orderDAO = new tblBondReaderDAO();
    public int number;
    public String id;

    private Connection conn;
    private PreparedStatement stmt;
    private ResultSet rs;
    private JTable TableBorrow;

    private String idreader = "";
    private String date = "";

    public DOrderBook(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public DOrderBook(String id, String idreader, String idbook, String total, String datestart, String datefinish, int number, JTable tableborrow, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.id = id;
        txtIdReader.setText(idreader);
        txtIdBook.setText(idbook);
        txtToTal.setText(total);
        if (datestart.length() != 0 && datefinish.length() != 0) {
            txtDateBorrow.setDate(DateToDTime.SToDate(datestart));
            txtDateReturn.setDate(DateToDTime.SToDate(datefinish));
        } else {
            txtDateBorrow.setDate(null);
            txtDateReturn.setDate(null);
        }
        this.number = number;

        this.TableBorrow = tableborrow;
        if (number == 1) {
            txtIdReader.setEditable(false);
            txtIdBook.requestFocus();
        } else {
            getDateNow();
        }
        this.idreader = idreader;
        this.date = datestart;
    }

    public void showTableBorrow(JTable tableborrow) {
        tblBondReaderModel bondReaderModel = new tblBondReaderModel();
        bondReaderModel.setData(new tblBondReaderDAO().GetAll());
        tableborrow.setModel(bondReaderModel);
    }

    private void getDateNow() {
        try {
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            Date datenow = new Date();
            txtDateBorrow.setDate(dateFormat.parse(dateFormat.format(datenow)));
        } catch (ParseException ex) {
            Logger.getLogger(DOrderBook.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void CheckPubId() {
        try {
            conn = DataHelper.getConnection();
            String idreader = "";
            String sql = "select top 1* from tblReader where ReaderId=?";
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, txtIdReader.getText());
            rs = stmt.executeQuery();
            while (rs.next()) {
                idreader = rs.getString("ReaderId");

            }
            rs.close();
            conn.close();
            if (txtIdReader.getText().length() != 0) {
                if (!idreader.equals(txtIdReader.getText())) {
                    txtIdReader.requestFocus();
                    JOptionPane.showMessageDialog(null, "Không có mã độc giả này", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                }
            } else {
                txtIdReader.requestFocus();
            }
        } catch (Exception e) {
            e.getMessage();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        palD = new javax.swing.JPanel();
        btnX4 = new javax.swing.JLabel();
        btnPrint = new javax.swing.JPanel();
        lb7 = new javax.swing.JLabel();
        btnFinishBook = new javax.swing.JPanel();
        lb6 = new javax.swing.JLabel();
        lb9 = new javax.swing.JLabel();
        Sepa2 = new javax.swing.JSeparator();
        txtIdReader = new javax.swing.JTextField();
        lb1 = new javax.swing.JLabel();
        Sepa1 = new javax.swing.JSeparator();
        txtIdBook = new javax.swing.JTextField();
        lb10 = new javax.swing.JLabel();
        txtToTal = new javax.swing.JTextField();
        Sepa8 = new javax.swing.JSeparator();
        lb2 = new javax.swing.JLabel();
        txtDateBorrow = new com.toedter.calendar.JDateChooser();
        lb11 = new javax.swing.JLabel();
        txtDateReturn = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        palD.setBackground(new java.awt.Color(98, 98, 110));
        palD.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                palDMouseDragged(evt);
            }
        });
        palD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                palDMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                palDMouseReleased(evt);
            }
        });

        btnX4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Exit.png"))); // NOI18N
        btnX4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnX4MouseClicked(evt);
            }
        });

        btnPrint.setBackground(new java.awt.Color(126, 130, 139));
        btnPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPrintMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnPrintMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnPrintMouseReleased(evt);
            }
        });

        lb7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lb7.setForeground(new java.awt.Color(255, 255, 255));
        lb7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb7.setText("In Phiếu");

        javax.swing.GroupLayout btnPrintLayout = new javax.swing.GroupLayout(btnPrint);
        btnPrint.setLayout(btnPrintLayout);
        btnPrintLayout.setHorizontalGroup(
            btnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb7, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
        );
        btnPrintLayout.setVerticalGroup(
            btnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb7, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
        );

        btnFinishBook.setBackground(new java.awt.Color(126, 130, 139));
        btnFinishBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFinishBookMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnFinishBookMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnFinishBookMouseReleased(evt);
            }
        });

        lb6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lb6.setForeground(new java.awt.Color(255, 255, 255));
        lb6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb6.setText("Lưu Phiếu Mượn");

        javax.swing.GroupLayout btnFinishBookLayout = new javax.swing.GroupLayout(btnFinishBook);
        btnFinishBook.setLayout(btnFinishBookLayout);
        btnFinishBookLayout.setHorizontalGroup(
            btnFinishBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb6, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
        );
        btnFinishBookLayout.setVerticalGroup(
            btnFinishBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb6, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
        );

        lb9.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lb9.setForeground(new java.awt.Color(255, 255, 255));
        lb9.setText("Mã Độc Giả");

        txtIdReader.setBackground(new java.awt.Color(98, 98, 110));
        txtIdReader.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtIdReader.setForeground(new java.awt.Color(255, 255, 255));
        txtIdReader.setBorder(null);
        txtIdReader.setCaretColor(new java.awt.Color(255, 255, 255));
        txtIdReader.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdReaderFocusLost(evt);
            }
        });

        lb1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lb1.setForeground(new java.awt.Color(255, 255, 255));
        lb1.setText("Mã Sách");

        txtIdBook.setBackground(new java.awt.Color(98, 98, 110));
        txtIdBook.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtIdBook.setForeground(new java.awt.Color(255, 255, 255));
        txtIdBook.setBorder(null);
        txtIdBook.setCaretColor(new java.awt.Color(255, 255, 255));

        lb10.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lb10.setForeground(new java.awt.Color(255, 255, 255));
        lb10.setText("Số Lượng ");

        txtToTal.setBackground(new java.awt.Color(98, 98, 110));
        txtToTal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtToTal.setForeground(new java.awt.Color(255, 255, 255));
        txtToTal.setBorder(null);
        txtToTal.setCaretColor(new java.awt.Color(255, 255, 255));

        lb2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lb2.setForeground(new java.awt.Color(255, 255, 255));
        lb2.setText("Ngày Mượn");

        txtDateBorrow.setDateFormatString("dd/MM/yyyy");
        txtDateBorrow.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lb11.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lb11.setForeground(new java.awt.Color(255, 255, 255));
        lb11.setText("Hạn Trả");

        txtDateReturn.setDateFormatString("dd/MM/yyyy");
        txtDateReturn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout palDLayout = new javax.swing.GroupLayout(palD);
        palD.setLayout(palDLayout);
        palDLayout.setHorizontalGroup(
            palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(palDLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnX4))
                    .addGroup(palDLayout.createSequentialGroup()
                        .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtIdReader, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Sepa2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtIdBook, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Sepa1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lb9))
                                .addComponent(Sepa8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtToTal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb10)
                            .addComponent(lb1))
                        .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(palDLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb11)
                                    .addComponent(lb2)
                                    .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtDateReturn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDateBorrow, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, palDLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnFinishBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        palDLayout.setVerticalGroup(
            palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palDLayout.createSequentialGroup()
                .addComponent(btnX4)
                .addGap(11, 11, 11)
                .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(palDLayout.createSequentialGroup()
                        .addComponent(lb2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDateBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb11)
                        .addGap(5, 5, 5)
                        .addComponent(txtDateReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(palDLayout.createSequentialGroup()
                        .addComponent(lb9)
                        .addGap(10, 10, 10)
                        .addComponent(txtIdReader, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(Sepa2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIdBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(Sepa1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(palDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(palDLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lb10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtToTal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(Sepa8, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, palDLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFinishBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(palD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(palD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnX4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnX4MouseClicked
        txtIdReader.setText("");
        showTableBorrow(TableBorrow);
        this.dispose();
    }//GEN-LAST:event_btnX4MouseClicked

    private void btnFinishBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinishBookMouseClicked
        if (number == 1) {
            if (txtIdBook.getText().length() != 0
                    && txtIdReader.getText().length() != 0
                    && txtToTal.getText().length() != 0
                    && txtDateBorrow.getDate() != null
                    && txtDateReturn.getDate() != null) {
                if (Valid.ValidN(txtToTal.getText()) == false) {
                    JOptionPane.showMessageDialog(null, "Giá trị không hợp lệ", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
                    txtToTal.requestFocus();
                } else if (DateInFormat.isValidFormat(DateToDTime.Datechooser(txtDateBorrow)) == false) {
                    JOptionPane.showMessageDialog(null, "Nhập sai định dạng", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    txtDateBorrow.requestFocus();
                } else if (DateInFormat.isValidFormat(DateToDTime.Datechooser(txtDateReturn)) == false) {
                    JOptionPane.showMessageDialog(null, "Nhập sai định dạng", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    txtDateReturn.requestFocus();
                } else if (orderDAO.Update(new tblBondReader(Integer.parseInt(id), txtIdReader.getText(), txtIdBook.getText(), Integer.parseInt(txtToTal.getText()),
                        DateToDTime.Datechooser(txtDateBorrow), DateToDTime.Datechooser(txtDateReturn))) != null) {
                    JOptionPane.showMessageDialog(null, "Sửa phiếu mượn thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    idreader = txtIdReader.getText();
                    date = DateToDTime.Datechooser(txtDateBorrow);
                    showTableBorrow(TableBorrow);
                    this.dispose();

                }

            } else {
                JOptionPane.showMessageDialog(null, "Sửa phiếu mượn thất bại bạn không được để trống", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            if (txtIdBook.getText().length() != 0
                    && txtIdReader.getText().length() != 0
                    && txtToTal.getText().length() != 0
                    && txtDateBorrow.getDate() != null
                    && txtDateReturn.getDate() != null) {
                if (Valid.ValidN(txtToTal.getText()) == false) {
                    JOptionPane.showMessageDialog(null, "Giá trị không hợp lệ", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
                    txtToTal.requestFocus();
                } else if (DateInFormat.isValidFormat(DateToDTime.Datechooser(txtDateBorrow)) == false) {
                    JOptionPane.showMessageDialog(null, "Nhập sai định dạng", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    txtDateBorrow.requestFocus();
                } else if (DateInFormat.isValidFormat(DateToDTime.Datechooser(txtDateReturn)) == false) {
                    JOptionPane.showMessageDialog(null, "Nhập sai định dạng", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    txtDateReturn.requestFocus();
                } else if (orderDAO.Insert(new tblBondReader(Integer.parseInt(id), txtIdReader.getText(), txtIdBook.getText(), Integer.parseInt(txtToTal.getText()),
                        DateToDTime.Datechooser(txtDateBorrow), DateToDTime.Datechooser(txtDateReturn))) != null) {
                    JOptionPane.showMessageDialog(null, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    idreader = txtIdReader.getText();
                    date = DateToDTime.Datechooser(txtDateBorrow);

                    txtIdBook.setText("");
                    txtToTal.setText("");
                    txtIdBook.requestFocus();

                    showTableBorrow(TableBorrow);

                } else {
                    JOptionPane.showMessageDialog(null, "Thêm thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Bạn không được để trống", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }//GEN-LAST:event_btnFinishBookMouseClicked

    private void palDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_palDMousePressed
        comPoint = evt.getPoint();
    }//GEN-LAST:event_palDMousePressed

    private void palDMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_palDMouseReleased
        comPoint = null;
    }//GEN-LAST:event_palDMouseReleased

    private void palDMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_palDMouseDragged
        Point cPoint = evt.getLocationOnScreen();
        this.setLocation(cPoint.x - comPoint.x, cPoint.y - comPoint.y);
    }//GEN-LAST:event_palDMouseDragged

    private void btnFinishBookMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinishBookMousePressed
        new SetBackgroundbtn(btnFinishBook).mousePressed(evt);
    }//GEN-LAST:event_btnFinishBookMousePressed

    private void btnFinishBookMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinishBookMouseReleased
        new SetBackgroundbtn(btnFinishBook).mouseReleased(evt);
    }//GEN-LAST:event_btnFinishBookMouseReleased

    private void txtIdReaderFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdReaderFocusLost
        CheckPubId();
        Valid.VToUpper(txtIdReader.getText());
    }//GEN-LAST:event_txtIdReaderFocusLost

    private void btnPrintMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMousePressed
        new SetBackgroundbtn(btnPrint).mousePressed(evt);
    }//GEN-LAST:event_btnPrintMousePressed

    private void btnPrintMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseReleased
        new SetBackgroundbtn(btnPrint).mouseReleased(evt);
    }//GEN-LAST:event_btnPrintMouseReleased

    private void btnPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseClicked
        if (txtIdReader.getText().length() != 0) {
            if (idreader.length() != 0) {
                new PrintOrder().printOrder(idreader, DateToDTime.SDateDateTime(date));
                this.dispose();
                showTableBorrow(TableBorrow);
            } else {
                JOptionPane.showMessageDialog(null, "Chưa có dữ liệu", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa có dữ liệu", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnPrintMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DOrderBook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DOrderBook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DOrderBook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DOrderBook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DOrderBook dialog = new DOrderBook(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator Sepa1;
    private javax.swing.JSeparator Sepa2;
    private javax.swing.JSeparator Sepa8;
    private javax.swing.JPanel btnFinishBook;
    private javax.swing.JPanel btnPrint;
    private javax.swing.JLabel btnX4;
    private javax.swing.JLabel lb1;
    private javax.swing.JLabel lb10;
    private javax.swing.JLabel lb11;
    private javax.swing.JLabel lb2;
    private javax.swing.JLabel lb6;
    private javax.swing.JLabel lb7;
    private javax.swing.JLabel lb9;
    private javax.swing.JPanel palD;
    private com.toedter.calendar.JDateChooser txtDateBorrow;
    private com.toedter.calendar.JDateChooser txtDateReturn;
    private javax.swing.JTextField txtIdBook;
    private javax.swing.JTextField txtIdReader;
    private javax.swing.JTextField txtToTal;
    // End of variables declaration//GEN-END:variables
}
